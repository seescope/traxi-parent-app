exports[`test renders 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }>
  <Image
    resizeMode="cover"
    source={1}
    style={
      Object {
        "height": 1334,
        "opacity": 1,
        "position": "absolute",
        "width": 750,
      }
    } />
  <Image
    resizeMode="cover"
    source={1}
    style={
      Object {
        "height": 1334,
        "opacity": 0,
        "position": "absolute",
        "width": 750,
      }
    } />
  <Image
    resizeMode="cover"
    source={1}
    style={
      Object {
        "height": 1334,
        "opacity": 0,
        "position": "absolute",
        "width": 750,
      }
    } />
  <Image
    resizeMode="cover"
    source={1}
    style={
      Object {
        "height": 1334,
        "opacity": 0,
        "position": "absolute",
        "width": 750,
      }
    } />
  <Image
    resizeMode="cover"
    source={1}
    style={
      Object {
        "height": 1334,
        "opacity": 0,
        "position": "absolute",
        "width": 750,
      }
    } />
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 5,
        "flexDirection": "row",
        "justifyContent": "space-between",
        "paddingHorizontal": 32,
      }
    }>
    <View />
    <View
      animation="bounce"
      delay={3000}
      duration={2000}
      useNativeDriver={true}>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        hitSlop={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID={undefined}>
        <Image
          source={1} />
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 3,
      }
    }>
    <View
      animation="bounceInLeft"
      duration={1000}
      easing="ease-out"
      useNativeDriver={true} />
    <View
      style={
        Object {
          "height": 32,
        }
      } />
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "backgroundColor": "transparent",
          "color": "#FFF",
          "fontFamily": "Raleway-ExtraBold",
          "fontSize": 28,
          "marginBottom": 16,
          "marginHorizontal": 16,
          "textAlign": "center",
        }
      }>
      [missing \"en.intro.header0\" translation]
    </Text>
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "backgroundColor": "transparent",
          "color": "#FFF",
          "fontFamily": "Raleway-Regular",
          "fontSize": 16,
          "marginBottom": 16,
          "marginHorizontal": 16,
          "textAlign": "center",
        }
      }>
      [missing \"en.intro.subheader0\" translation]
    </Text>
    <View
      style={
        Object {
          "height": 16,
        }
      } />
  </View>
</View>
`;

exports[`test sends tracking to Segment that intro was seen 1`] = `
Array [
  Array [
    "Finished Intro",
  ],
]
`;
